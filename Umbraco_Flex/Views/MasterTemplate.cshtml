@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
	Layout = null;
}
@{
	var host = Context.Request.Host.Host; 
  var noIndex = host.Contains("wearewattle", StringComparison.OrdinalIgnoreCase) || host.Contains("localhost", StringComparison.OrdinalIgnoreCase) || host.Contains("dev", StringComparison.OrdinalIgnoreCase) || host.Contains("stage", StringComparison.OrdinalIgnoreCase) || host.Contains("uat", StringComparison.OrdinalIgnoreCase);
}


<head>
	@if (noIndex)
	{
		<meta name="robots" content="noindex, nofollow">
		<meta name="googlebot" content="noindex, nofollow">
	}

	<link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,500;1,300&display=swap" rel="stylesheet">

	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.min.js"></script>

	<link rel="stylesheet" href="/css/main.css" />

</head>

<body class="bodygrid">
	<div class="topnav">
		<script src="~/scripts/PopulateDropdowns.js"></script>
		<div class="@(Model.Url() == Model.Root().Url()? "dropdown elementcontainer active" : "dropdown elementcontainer")">
			<a id="homeelement" class="element"
				 href=@Model.Root().Url()>Home</a>
		</div>

		<div class="dropdown">
			<div class="@(Model.UrlSegment() == "all-content" ? "elementcontainer active" : "elementcontainer")">
			<a class="element"
				href=@(string.Format("{0}{1}", Model.Root().Url(), "all-content?searchString=a"))>All	Content</a>
				<img src="~/media/jerp2mxg/arrow.svg" class="navarrow" />
			</div>
			<div id="all_dropdown" class="dropdown-content">
			</div>
		</div>

		<div class="dropdown">
			<div class="@(Model.UrlSegment() == "blogs" ? "elementcontainer active" : "elementcontainer")">
				<a class="element"
					 href=@(string.Format("{0}{1}", Model.Root().Url(), "blogs"))>Blogs</a>
				<img src="~/media/jerp2mxg/arrow.svg" class="navarrow" />
			</div>
			<div id="blogs_dropdown" class="dropdown-content">
			</div>
		</div>

		<div class="dropdown">
			<div class="@(Model.UrlSegment() == "news" ? "elementcontainer active" : "elementcontainer")">
			<a class= "element"
				 href=@(string.Format("{0}{1}", Model.Root().Url(), "news"))>News</a>
				<img src="~/media/jerp2mxg/arrow.svg" class="navarrow" />
			</div>
			<div id="news_dropdown" class="dropdown-content">
			</div>
		</div>

		<div class="logo">
			<h2 class="mainlogo">
				@(new HtmlString(Model.Value("title", fallback: Fallback.ToDefaultValue, defaultValue: "Nick's website")))
			</h2>
			<h5 class="sublogo">
				@(new HtmlString(Model.Value("subtitle")?.ToString() ?? string.Empty))
			</h5>
		</div>

	</div>

	<div id="maindiv">
		@RenderBody()
	</div>

	<footer class="footer">
		<p>@Model.Value("Footer", fallback: Fallback.ToDefaultValue, defaultValue: "Default footer")</p>
	</footer>
</body>
